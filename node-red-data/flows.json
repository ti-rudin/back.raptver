[
    {
        "id": "e6bc8fcb02c15518",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7f80e3ebbbbbf4fc",
        "type": "tab",
        "label": "logger",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d1b37d24449aad51",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8211235bd37227f4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d90888f2a9b33ff4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cf6819f53065cd71",
        "type": "group",
        "z": "e6bc8fcb02c15518",
        "style": {
            "stroke": "#2e333a",
            "stroke-opacity": "1",
            "fill": "#383c45",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4b992fc87ca15884",
            "cd4338abceec439a",
            "e82b5dc08e9f63ce",
            "73bcd90742145d37",
            "60a8ab7079b924e2",
            "7308c520c3039313",
            "eafa6c70a97c461e",
            "bbd47c7fd63d1c8d",
            "abb3375f3abbf228",
            "6f8c25c6532c82cc",
            "bfb7c56511f9eb99",
            "48ceaa851ec514a2",
            "2f762396f721e396",
            "31d4dd7ea6aeeaec",
            "bdd30bde8619ece1",
            "583d29cf36b68fc4",
            "2d9e2e90c0c843dc",
            "45dc2dd571a1ea7b",
            "e4b6f177902056b1",
            "c8ad9f67bf8d5cff",
            "274688907d368375",
            "f12fe7c127d3ae70",
            "be8f182b46209dd1",
            "07951a618702ccd5",
            "844ffcc46ab2d193",
            "5b5e5db34ffdb1a8",
            "bbee8c1fcd958013",
            "1da35678c59b8513",
            "79adfb68fd65cf2a",
            "f0e089676488c6a5",
            "0b4988106dc31a60",
            "70a38315b42fe4fa",
            "7b6ddf58fb7a3b2c",
            "d8cedba031d2d8fa",
            "132a8ceceb5f5dde",
            "a6d80f80063cf204",
            "de126b502575e8dd",
            "9b4693ca4dad50a0",
            "945ef5f0c78539fa",
            "aecce3128ea6b3df",
            "101b3d9e856b7668",
            "26a4d5bbcd70e1f6",
            "096f7ffc3f07ea41",
            "7f21d0b7251e827f",
            "7632d5e993f72a2d",
            "354e6d66fdf61c06"
        ],
        "x": 954,
        "y": 2019,
        "w": 1472,
        "h": 902
    },
    {
        "id": "bd7bd83cb043bc5c",
        "type": "group",
        "z": "7f80e3ebbbbbf4fc",
        "style": {
            "stroke": "#2e333a",
            "stroke-opacity": "1",
            "fill": "#383c45",
            "fill-opacity": "0.5",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6193b88aa2db86ad",
            "f00cad593ad99738",
            "a123774fb3f16ddd",
            "18af4227dd06c34d",
            "45c16b9ca2e4a9cf",
            "1eb0d957ea14414d",
            "0af8d15feeb9ee9a"
        ],
        "x": 774,
        "y": 1019,
        "w": 1552,
        "h": 122
    },
    {
        "id": "de2918815c34c8e3",
        "type": "redis-config",
        "name": "Local",
        "options": "redis://:YzRAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "f120eab2.0a60a8",
        "type": "redis-config",
        "name": "redis:6379",
        "options": "redis://:YzRAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "8d62db31fd22cba6",
        "type": "notify-events-channel",
        "name": "test",
        "token": "UXeAzMi3DPeue88Fk5r8mOzskYx574TE",
        "tokenType": "str"
    },
    {
        "id": "8d22a1ef75f18657",
        "type": "nexmobasic"
    },
    {
        "id": "88fa77488e3ccfe1",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1b9af2ac5b5a5ae9",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d79a915f954e4d56",
        "type": "ui_group",
        "name": "Default",
        "tab": "88fa77488e3ccfe1",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0efbb89.5e42d8",
        "type": "redis-config",
        "name": "local",
        "options": "redis://:YzRAdGgkFg@redis:6379",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "59ed4f05562ad1b1",
        "type": "sqlitedb",
        "db": "/data/logs.db",
        "mode": "RWC"
    },
    {
        "id": "4e275ef7a2420c4e",
        "type": "sqlitedb",
        "db": "/workspace/sqlite-plugin-red/examples/test.db",
        "mode": "RW"
    },
    {
        "id": "c89ef81beac2a937",
        "type": "sqlitedb",
        "db": "/workspace/sqlite-plugin-red/examples/test.db",
        "mode": "RW"
    },
    {
        "id": "b02b9e6ed72d8945",
        "type": "redis-instance",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "name": "",
        "topic": "redis",
        "location": "flow",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "f63c211f7cf81945",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/track-now-id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 3340,
        "wires": [
            [
                "ec812f2a4ebddc9d"
            ]
        ]
    },
    {
        "id": "b2e2f901b401f316",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 3340,
        "wires": []
    },
    {
        "id": "ec812f2a4ebddc9d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"track-now-id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3340,
        "wires": [
            [
                "1165f1e6e1b45e59"
            ]
        ]
    },
    {
        "id": "1165f1e6e1b45e59",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 500,
        "y": 3340,
        "wires": [
            [
                "b2e2f901b401f316"
            ]
        ]
    },
    {
        "id": "08eab6b51406d297",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/api",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 3740,
        "y": 2840,
        "wires": [
            [
                "1cf1cedaf842cb84",
                "2a67f2ef7a0cab52"
            ]
        ]
    },
    {
        "id": "e5b8299d134cafcc",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 4220,
        "y": 2840,
        "wires": []
    },
    {
        "id": "8c610814a99e3125",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4250,
        "y": 2760,
        "wires": []
    },
    {
        "id": "893c1f0c87f152d8",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nmsg.payload = [];\nmsg.topic = \"test\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3920,
        "y": 2760,
        "wires": [
            [
                "78cf3e06107ca7aa"
            ]
        ]
    },
    {
        "id": "78cf3e06107ca7aa",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 4080,
        "y": 2760,
        "wires": [
            [
                "8c610814a99e3125"
            ]
        ]
    },
    {
        "id": "1cf1cedaf842cb84",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3790,
        "y": 2920,
        "wires": []
    },
    {
        "id": "2a67f2ef7a0cab52",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let id, idq\nid = msg.payload.id;\nlet response;\n\nif (id == \"248618038\"){\n    idq =\"admin\";\n} else {\n    idq =\"nonadmin\";\n}\n\n\n\n\nresponse = {\n    id: idq,\n    qq: \"qq\"\n}\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3980,
        "y": 2840,
        "wires": [
            [
                "e5b8299d134cafcc",
                "64770c8838678f67"
            ]
        ]
    },
    {
        "id": "64770c8838678f67",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3990,
        "y": 2900,
        "wires": []
    },
    {
        "id": "caa36ec009038d1a",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "gettest",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1500,
        "y": 140,
        "wires": [
            [
                "85a473180350d074"
            ]
        ]
    },
    {
        "id": "85a473180350d074",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "getvol(id)",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\n// Code added here will be run once\n// whenever the node is deployed.\nlet getvol = function (id = msg.payload) {\n    \n    let promise = new Promise((resolve, reject) => {\n        msg.resolve = resolve;\n        msg.reject = reject;\n    });\n    \n\n    msg.topic = id;\n    msg.payload = [];\n\n    node.send(Object.assign({}, msg));\n    \n    return promise;\n};\n\nglobal.set('getvol', getvol);",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 140,
        "wires": [
            [
                "cc432a8e0784b0f9"
            ]
        ]
    },
    {
        "id": "cc432a8e0784b0f9",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "GET",
        "name": "get vol",
        "topic": "msg.payload",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1810,
        "y": 140,
        "wires": [
            [
                "2e7a67404d21442a"
            ]
        ]
    },
    {
        "id": "2e7a67404d21442a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "resolve",
        "func": "let t= JSON.parse(msg.payload);\nmsg.resolve(t);\n\n// reject\n// setTimeout(function () {\n//     msg.reject({message: 'Could not request joke'});\n// }, 2000);",
        "outputs": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 140,
        "wires": []
    },
    {
        "id": "c6f75d76df02c176",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "getvol (\"test\")",
        "func": "let id = msg.payload;\nconst gbl = global.get('getvol')(id);\n\ngbl.then(gbl => {\n\n    msg.payload = gbl;\n\n\n    node.status({ fill: \"green\", shape: \"dot\" });\n    node.send(msg);\n\n}).catch(error => {\n\n\n    node.status({ fill: \"red\", shape: \"dot\" });\n\n    node.error(error);\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2380,
        "y": 140,
        "wires": [
            [
                "fcf602c38fa398b2"
            ]
        ]
    },
    {
        "id": "fcf602c38fa398b2",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 140,
        "wires": []
    },
    {
        "id": "308b3c2962aac698",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "x": 2190,
        "y": 140,
        "wires": [
            [
                "c6f75d76df02c176"
            ]
        ]
    },
    {
        "id": "d39d07fafbda681e",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "name": "Функции",
        "info": "",
        "x": 1480,
        "y": 80,
        "wires": []
    },
    {
        "id": "bc2e3fa8c1533580",
        "type": "notify-events",
        "z": "e6bc8fcb02c15518",
        "name": "ку",
        "channel": "8d62db31fd22cba6",
        "title": "ку",
        "titleType": "str",
        "text": "payload",
        "textType": "msg",
        "priority": "normal",
        "priorityType": "str",
        "level": "info",
        "levelType": "str",
        "images": [],
        "files": [],
        "actionHost": "http://77.87.212.142:1880/",
        "actions": [],
        "outputs": 0,
        "x": 3430,
        "y": 1520,
        "wires": []
    },
    {
        "id": "72edd730bcad6ba3",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Normal",
        "payload": "re",
        "payloadType": "str",
        "x": 3260,
        "y": 1520,
        "wires": [
            [
                "bc2e3fa8c1533580"
            ]
        ]
    },
    {
        "id": "6de412619eb8c252",
        "type": "sendsms",
        "z": "e6bc8fcb02c15518",
        "creds": "8d22a1ef75f18657",
        "to": "79651050211",
        "fr": "79651050211",
        "text": "q",
        "unicode": false,
        "x": 3350,
        "y": 1620,
        "wires": [
            [
                "a706c52d15358471"
            ]
        ]
    },
    {
        "id": "b89b8befc0703c94",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3180,
        "y": 1620,
        "wires": [
            [
                "6de412619eb8c252"
            ]
        ]
    },
    {
        "id": "a706c52d15358471",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3510,
        "y": 1620,
        "wires": []
    },
    {
        "id": "ca376d4abfd01c4b",
        "type": "http request",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://admin.raptver.ru/api/artists?populate=avatar",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2970,
        "y": 2100,
        "wires": [
            [
                "c6f8e477fe44d4b5",
                "1188fe344bf433d3"
            ]
        ]
    },
    {
        "id": "c6f8e477fe44d4b5",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3190,
        "y": 2200,
        "wires": []
    },
    {
        "id": "032576dece827df6",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2800,
        "y": 2100,
        "wires": [
            [
                "ca376d4abfd01c4b"
            ]
        ]
    },
    {
        "id": "c18c893de220818d",
        "type": "split",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3330,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "fe5f4a52a2917a32",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3630,
        "y": 2100,
        "wires": []
    },
    {
        "id": "1188fe344bf433d3",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let data = msg.payload.data;\nmsg = {};\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 2100,
        "wires": [
            [
                "e1bc6c218be712c9"
            ]
        ]
    },
    {
        "id": "edb7e492f34f6ae2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let avatar = msg.payload.attributes.avatar.data.attributes.url\nmsg.payload.attributes = {};\nmsg.payload.avatar = avatar;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3480,
        "y": 2100,
        "wires": [
            [
                "fe5f4a52a2917a32"
            ]
        ]
    },
    {
        "id": "f4b2a8ef9facafe9",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/getuserdata",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 560,
        "wires": [
            [
                "af5bd118674649cf",
                "d340af7f550b9a78"
            ]
        ]
    },
    {
        "id": "c896b0170853628b",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 640,
        "y": 560,
        "wires": []
    },
    {
        "id": "af5bd118674649cf",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "is admin",
        "func": "let id, idq\nid = msg.payload.id;\nlet response;\n\nif ((id == \"248618038\") || (id == \"704149310\")) {\n    idq = \"admin\";\n} else {\n    idq = \"nonadmin\";\n}\n\n//mngr\n\nif (\n    (id == \"74290745\")\n    || (id == \"186003828\")\n    || (id == \"1928384\")\n    || (id == \"320380683\")\n    || (id == \"8376097\")\n    || (id == \"67953095\")\n    || (id == \"353440742\")\n    || (id == \"227871746\")\n    || (id == \"274947\")\n\n    \n) { idq = \"mngr\" }\n\n\n\nresponse = {\n    id: idq,\n    qq: \"qq\"\n}\nmsg.payload = response;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 560,
        "wires": [
            [
                "c896b0170853628b",
                "dcca7461ea414ffc"
            ]
        ]
    },
    {
        "id": "c2915898eb2f2823",
        "type": "http request",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://admin.raptver.ru/api/concerts/1",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 2990,
        "y": 2380,
        "wires": [
            [
                "40c8a9222d74f2cc",
                "0f7cad310482e20c"
            ]
        ]
    },
    {
        "id": "40c8a9222d74f2cc",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 2460,
        "wires": []
    },
    {
        "id": "c1be1d8c47f94778",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2820,
        "y": 2380,
        "wires": [
            [
                "c2915898eb2f2823"
            ]
        ]
    },
    {
        "id": "b4a5a1169a45f5e4",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3410,
        "y": 2460,
        "wires": []
    },
    {
        "id": "0f7cad310482e20c",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "payload concert id",
        "func": "let data = msg.payload.data;\nmsg = {};\nmsg.payload = \"concert\"+data.id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3210,
        "y": 2380,
        "wires": [
            [
                "b4a5a1169a45f5e4",
                "56ddd12299eee650"
            ]
        ]
    },
    {
        "id": "6385aef841e20dd0",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3770,
        "y": 2300,
        "wires": []
    },
    {
        "id": "f73d65fa2b64d42c",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\n\nmsg.topic = \"test\"+msg.payload;\nmsg.payload = [];\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3400,
        "y": 2320,
        "wires": [
            [
                "4e42edd13e305fda"
            ]
        ]
    },
    {
        "id": "4e42edd13e305fda",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 3600,
        "y": 2300,
        "wires": [
            [
                "6385aef841e20dd0"
            ]
        ]
    },
    {
        "id": "56ddd12299eee650",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "getvol (id)",
        "func": "let id = msg.payload;\nconst gbl = global.get('getvol')(id);\n\ngbl.then(gbl => {\n\n    msg.payload = gbl;\n\n\n    node.status({ fill: \"green\", shape: \"dot\" });\n    node.send(msg);\n\n}).catch(error => {\n\n\n    node.status({ fill: \"red\", shape: \"dot\" });\n\n    node.error(error);\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3500,
        "y": 2380,
        "wires": [
            [
                "8e5db52af9f1b6dd"
            ]
        ]
    },
    {
        "id": "8e5db52af9f1b6dd",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3690,
        "y": 2380,
        "wires": []
    },
    {
        "id": "94b54f4ac5bd161a",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "name": "Тесты",
        "info": "",
        "x": 2170,
        "y": 80,
        "wires": []
    },
    {
        "id": "e1bc6c218be712c9",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3290,
        "y": 2140,
        "wires": []
    },
    {
        "id": "0a3d50f8f0c7cc57",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/open-status",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 2740,
        "wires": [
            [
                "bf845e4c02eb98b2",
                "51287414f3af88b3"
            ]
        ]
    },
    {
        "id": "a27dd1e5d1d6897c",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 740,
        "y": 2880,
        "wires": []
    },
    {
        "id": "bf845e4c02eb98b2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get open-status",
        "func": "let id = \"open-status\";\nconst gbl = global.get('getvol')(id);\n\ngbl.then(gbl => {\n\n    msg.payload = JSON.parse(gbl);\n\n\n    node.status({ fill: \"green\", shape: \"dot\" });\n    node.send(msg);\n\n}).catch(error => {\n\n\n    node.status({ fill: \"red\", shape: \"dot\" });\n\n    node.error(error);\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 2740,
        "wires": [
            [
                "0a3307dba4df6c28"
            ]
        ]
    },
    {
        "id": "a7b0f24f4bea7991",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/bands-data-update",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 830,
        "y": 420,
        "wires": [
            [
                "d606edf6316a79ec",
                "a80c34df7fb149d7",
                "d819345372846ee9",
                "25d732febc5f21bc",
                "1d56e89072bb1468"
            ]
        ]
    },
    {
        "id": "d606edf6316a79ec",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 920,
        "y": 480,
        "wires": []
    },
    {
        "id": "6cc28d806663e746",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "bands data",
        "func": "let data = msg.payload\n\n\n\nglobal.set('bands', data);\nmsg.payload = [\"bands\", JSON.stringify(data)];\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 420,
        "wires": [
            [
                "412f92b2274337d7"
            ]
        ]
    },
    {
        "id": "412f92b2274337d7",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1820,
        "y": 420,
        "wires": [
            [
                "7baf04c09001ed38"
            ]
        ]
    },
    {
        "id": "7baf04c09001ed38",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 420,
        "wires": []
    },
    {
        "id": "a80c34df7fb149d7",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "bands data",
        "func": "let data = msg.payload.bands.bands.data\n\n\n\n\nmsg.payload = data;\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "5f80de7d3154031a"
            ]
        ]
    },
    {
        "id": "5f80de7d3154031a",
        "type": "split",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1350,
        "y": 420,
        "wires": [
            [
                "16122d1ef0b58097"
            ]
        ]
    },
    {
        "id": "16122d1ef0b58097",
        "type": "join",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "payload.id",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1490,
        "y": 420,
        "wires": [
            [
                "6cc28d806663e746"
            ]
        ]
    },
    {
        "id": "8a98d62eea676160",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/send-like",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 2260,
        "wires": [
            [
                "c7d14fb741806657",
                "d1e376bf65068acd"
            ]
        ]
    },
    {
        "id": "c7d14fb741806657",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 140,
        "y": 2320,
        "wires": []
    },
    {
        "id": "d1e376bf65068acd",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2260,
        "wires": [
            [
                "450d130a4ea2eafc",
                "cc7bfb87f6dd4134"
            ]
        ]
    },
    {
        "id": "836328b15f519f33",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:likes",
        "func": "let concert_id = msg.payload.x.u.status.concert_id;\nlet show_name = msg.payload.x.u.status.show_name;\nlet event_id = msg.payload.x.u.status.event_id;\n\nlet likes = +msg.payload.x.u.status.likes + 1;\n\nlet event_name = msg.payload.x.u.status.event_name;\nlet ploschadka_type = msg.payload.x.u.status.ploschadka_type;\nlet ploschadka = msg.payload.x.u.status.ploschadka;\n\nlet band_rtid = msg.payload.x.u.status.now_on_scene.band_rtid;\nlet band_name = msg.payload.x.u.status.now_on_scene.band_name;\nlet track_id = msg.payload.x.u.status.now_on_scene.track_id;\nlet track_name = msg.payload.x.u.status.now_on_scene.track_name;\n\nlet logrecord = {\n    concert_id: concert_id,\n    show_name: show_name,\n}\nlet name = \"concert:\" + concert_id + \":event:\"+event_id+\":likes\"\nmsg.payload = [name, likes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2540,
        "wires": [
            [
                "ece6a1d4a4c34b70"
            ]
        ]
    },
    {
        "id": "ece6a1d4a4c34b70",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 700,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "0a3307dba4df6c28",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get likes",
        "func": "\n\nmsg.wolikes = msg.payload;\nmsg.topic = \"concert:\" + msg.payload.concert_id + \":event:\" + msg.payload.event_id + \":likes\"\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2820,
        "wires": [
            [
                "6eef6d6fc6805bae"
            ]
        ]
    },
    {
        "id": "6eef6d6fc6805bae",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 380,
        "y": 2820,
        "wires": [
            [
                "9213209f77a1975c"
            ]
        ]
    },
    {
        "id": "4b068e121b60c168",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "final response",
        "func": "msg.wolikes.tracklikes = msg.payload;\nmsg.payload = msg.wolikes;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2880,
        "wires": [
            [
                "a27dd1e5d1d6897c"
            ]
        ]
    },
    {
        "id": "450d130a4ea2eafc",
        "type": "switch",
        "z": "e6bc8fcb02c15518",
        "name": "is have_spisok?",
        "property": "payload.x.u.status.now_on_scene.have_spisok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 2440,
        "wires": [
            [
                "dfc0a183e7ba97de",
                "3e7722e2a8f27089"
            ],
            [
                "836328b15f519f33"
            ]
        ]
    },
    {
        "id": "dfc0a183e7ba97de",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:likes",
        "func": "let concert_id = msg.payload.x.u.status.concert_id;\nlet show_name = msg.payload.x.u.status.show_name;\nlet event_id = msg.payload.x.u.status.event_id;\n\nlet likes = +msg.payload.x.u.status.likes + 1;\n\nlet event_name = msg.payload.x.u.status.event_name;\nlet ploschadka_type = msg.payload.x.u.status.ploschadka_type;\nlet ploschadka = msg.payload.x.u.status.ploschadka;\n\nlet band_rtid = msg.payload.x.u.status.now_on_scene.band_rtid;\nlet band_name = msg.payload.x.u.status.now_on_scene.band_name;\nlet track_id = msg.payload.x.u.status.now_on_scene.track_id;\nlet track_name = msg.payload.x.u.status.now_on_scene.track_name;\n\nlet logrecord = {\n    concert_id: concert_id,\n    show_name: show_name,\n}\nlet name = \"concert:\" + concert_id + \":event:\"+event_id+\":likes\"\nmsg.payload = [name, likes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2400,
        "wires": [
            [
                "a3aca5773cc4dbe2"
            ]
        ]
    },
    {
        "id": "a3aca5773cc4dbe2",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 720,
        "y": 2400,
        "wires": [
            []
        ]
    },
    {
        "id": "3e7722e2a8f27089",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:track:",
        "func": "let concert_id = msg.payload.x.u.status.concert_id;\nlet show_name = msg.payload.x.u.status.show_name;\nlet event_id = msg.payload.x.u.status.event_id;\n\nlet likes = +msg.payload.x.u.status.tracklikes + 1;\n\nlet event_name = msg.payload.x.u.status.event_name;\nlet ploschadka_type = msg.payload.x.u.status.ploschadka_type;\nlet ploschadka = msg.payload.x.u.status.ploschadka;\n\nlet band_rtid = msg.payload.x.u.status.now_on_scene.band_rtid;\nlet band_name = msg.payload.x.u.status.now_on_scene.band_name;\nlet track_id = msg.payload.trackindex;\nlet track_name = msg.payload.x.u.status.now_on_scene.track_name;\n\nlet logrecord = {\n    concert_id: concert_id,\n    show_name: show_name,\n}\nlet name = \"concert:\" + concert_id + \":event:\" + event_id + \":track:\" + track_id\nmsg.payload = [name, likes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2440,
        "wires": [
            [
                "78faf956f7aca82b"
            ]
        ]
    },
    {
        "id": "78faf956f7aca82b",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 720,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "7afad0ce2bd52738",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get tracklikes",
        "func": "\n\nmsg.wotracklikes = msg.payload;\nmsg.topic = \"concert:\" + msg.payload.concert_id + \":event:\" + msg.payload.event_id + \":track:\" + msg.payload.now_on_scene.track_id\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2880,
        "wires": [
            [
                "89fe89cb95e35188"
            ]
        ]
    },
    {
        "id": "89fe89cb95e35188",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 380,
        "y": 2880,
        "wires": [
            [
                "4b068e121b60c168"
            ]
        ]
    },
    {
        "id": "9213209f77a1975c",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "final response",
        "func": "msg.wolikes.likes = msg.payload;\nmsg.payload = msg.wolikes;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 2820,
        "wires": [
            [
                "7afad0ce2bd52738"
            ]
        ]
    },
    {
        "id": "dd6f1e582ab27a9a",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/track-now-likes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3380,
        "wires": [
            [
                "e3f9b12d8bbbc482"
            ]
        ]
    },
    {
        "id": "50ee194aef5e6b44",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 3380,
        "wires": []
    },
    {
        "id": "e3f9b12d8bbbc482",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"track-now-likes\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 3380,
        "wires": [
            [
                "5e1da48a9caa373c"
            ]
        ]
    },
    {
        "id": "5e1da48a9caa373c",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 500,
        "y": 3380,
        "wires": [
            [
                "50ee194aef5e6b44"
            ]
        ]
    },
    {
        "id": "9d62ca89ef0fbe37",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_on_scene",
        "func": "let now_on_scene = {\n    band_rtid: null,\n    band_name: null,\n    band_town: null,\n    have_spisok: false,\n    track_id: null,\n    track_name: null,\n    track_word_author: null,\n    track_music_author: null,\n    track_words: null,\n    is_premiere: null,\n    actual_spisok_pesen: [],\n}\nglobal.set('now_on_scene', now_on_scene)\n\nmsg.payload = [\"now_on_scene\", JSON.stringify(now_on_scene)];\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 40,
        "wires": [
            [
                "78156562fcf62de5",
                "c7027c32881b3412"
            ]
        ]
    },
    {
        "id": "8d506268fd9079cb",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "9d62ca89ef0fbe37"
            ]
        ]
    },
    {
        "id": "78156562fcf62de5",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 920,
        "y": 40,
        "wires": [
            [
                "8bec740ba598de29"
            ]
        ]
    },
    {
        "id": "8bec740ba598de29",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 40,
        "wires": []
    },
    {
        "id": "c7027c32881b3412",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset efir",
        "func": "\nlet name = \"efir\";\n\nlet now_on_scene = global.get('now_on_scene');;\n\n\nlet efir = {\n    now_on_scene: now_on_scene,\n    is_show_go: false,\n    concert_id: null,\n    show_name: null,\n    event_id: null,\n    event_name: null,\n    ploschadka_type: null,\n    ploschadka: null\n}\n\nglobal.set('efir', efir);\n\nmsg.payload = [name, JSON.stringify(efir)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 80,
        "wires": [
            [
                "8fd98bfccb5c1efb",
                "014d2d9c907a935f"
            ]
        ]
    },
    {
        "id": "8603715972fe88fa",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.2",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "c7027c32881b3412"
            ]
        ]
    },
    {
        "id": "8fd98bfccb5c1efb",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "4a74c24000acdc1b"
            ]
        ]
    },
    {
        "id": "4a74c24000acdc1b",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 80,
        "wires": []
    },
    {
        "id": "014d2d9c907a935f",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_event_id",
        "func": "\nlet name = \"now_event_id\";\n\nglobal.set(name, null);\n\nmsg.payload = [name, JSON.stringify(null)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "2ff588839d2be46d",
                "9787369ca9e22fd3"
            ]
        ]
    },
    {
        "id": "aa797164407491ba",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.3",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "014d2d9c907a935f"
            ]
        ]
    },
    {
        "id": "2ff588839d2be46d",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 920,
        "y": 120,
        "wires": [
            [
                "8f282e167b745e75"
            ]
        ]
    },
    {
        "id": "8f282e167b745e75",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 120,
        "wires": []
    },
    {
        "id": "9787369ca9e22fd3",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_track_id",
        "func": "\nlet name = \"now_track_id\";\n\nglobal.set(name, null);\n\nmsg.payload = [name, JSON.stringify(null)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 160,
        "wires": [
            [
                "d235c9f479fcd6ee",
                "8f4c0a415173cbcd"
            ]
        ]
    },
    {
        "id": "df4ac2e19f193daf",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.4",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.4",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "9787369ca9e22fd3"
            ]
        ]
    },
    {
        "id": "d235c9f479fcd6ee",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 920,
        "y": 160,
        "wires": [
            [
                "48bbdf22e660d8fa"
            ]
        ]
    },
    {
        "id": "48bbdf22e660d8fa",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 160,
        "wires": []
    },
    {
        "id": "8f4c0a415173cbcd",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_event_likes",
        "func": "\nlet name = \"now_event_likes\";\n\nglobal.set(name, 0);\n\nmsg.payload = [name, 0];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 200,
        "wires": [
            [
                "d8832f31efccb4e1",
                "a0c567762427f4b0"
            ]
        ]
    },
    {
        "id": "985cc024949becbd",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.5",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "8f4c0a415173cbcd"
            ]
        ]
    },
    {
        "id": "d8832f31efccb4e1",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "a0ce58b10a0c3339"
            ]
        ]
    },
    {
        "id": "a0ce58b10a0c3339",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 200,
        "wires": []
    },
    {
        "id": "a0c567762427f4b0",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_track_likes",
        "func": "\nlet name = \"now_track_likes\";\n\nglobal.set(name, null);\n\nmsg.payload = [name, JSON.stringify(null)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 240,
        "wires": [
            [
                "93bd249be5447ad1",
                "c5f067ee445b9822"
            ]
        ]
    },
    {
        "id": "6dfa44dfbfcc56f6",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.6",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.6",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "a0c567762427f4b0"
            ]
        ]
    },
    {
        "id": "93bd249be5447ad1",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "da432490d4aa81d1"
            ]
        ]
    },
    {
        "id": "da432490d4aa81d1",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 240,
        "wires": []
    },
    {
        "id": "32f6754c180bd278",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/get-now",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 930,
        "y": 620,
        "wires": [
            [
                "4dbd39a599c80ded",
                "221c98a4eab0fa44"
            ]
        ]
    },
    {
        "id": "45494eb4a2594c20",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1980,
        "y": 620,
        "wires": []
    },
    {
        "id": "278d43899902bbd7",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get now_event_id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_event_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 620,
        "wires": [
            [
                "6f3edf81cadb7ffd"
            ]
        ]
    },
    {
        "id": "6f3edf81cadb7ffd",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 620,
        "wires": [
            [
                "f2c6161f6912d1c2"
            ]
        ]
    },
    {
        "id": "c5f067ee445b9822",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reset now_concert_id",
        "func": "\nlet name = \"now_concert_id\";\n\nglobal.set(name, null);\n\nmsg.payload = [name, JSON.stringify(null)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 280,
        "wires": [
            [
                "66554d368a646bf2"
            ]
        ]
    },
    {
        "id": "0d3ed2e2e2391114",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.7",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.7",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 280,
        "wires": [
            [
                "c5f067ee445b9822"
            ]
        ]
    },
    {
        "id": "66554d368a646bf2",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 940,
        "y": 280,
        "wires": [
            [
                "0dc2bdbe934393b6"
            ]
        ]
    },
    {
        "id": "0dc2bdbe934393b6",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "2137166e14b34f44",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 680,
        "wires": [
            [
                "4dbd39a599c80ded"
            ]
        ]
    },
    {
        "id": "f2c6161f6912d1c2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {...msg.now,\n    now_event_id: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 620,
        "wires": [
            [
                "c46dbe3bebceb206"
            ]
        ]
    },
    {
        "id": "c46dbe3bebceb206",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get now_track_id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_track_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 680,
        "wires": [
            [
                "ff8ca018f199cdf5"
            ]
        ]
    },
    {
        "id": "ff8ca018f199cdf5",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 680,
        "wires": [
            [
                "5e98329119025977"
            ]
        ]
    },
    {
        "id": "5e98329119025977",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_track_id: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 680,
        "wires": [
            [
                "72055abfeb7a9c09"
            ]
        ]
    },
    {
        "id": "4dbd39a599c80ded",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "let now = {\n    \n};\n\nmsg.now =now;\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 620,
        "wires": [
            [
                "278d43899902bbd7"
            ]
        ]
    },
    {
        "id": "72055abfeb7a9c09",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get now_event_likes",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_event_likes\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 740,
        "wires": [
            [
                "41427e596c5a9433"
            ]
        ]
    },
    {
        "id": "41427e596c5a9433",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 740,
        "wires": [
            [
                "f92396248be11856"
            ]
        ]
    },
    {
        "id": "f92396248be11856",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_event_likes: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 740,
        "wires": [
            [
                "48c94c63b841bc4a"
            ]
        ]
    },
    {
        "id": "48c94c63b841bc4a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get now_track_likes",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_track_likes\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 800,
        "wires": [
            [
                "40b0128273ec73bd"
            ]
        ]
    },
    {
        "id": "40b0128273ec73bd",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 800,
        "wires": [
            [
                "224feb2f2ee41bce"
            ]
        ]
    },
    {
        "id": "224feb2f2ee41bce",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_track_likes: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 800,
        "wires": [
            [
                "7a236cd81325a6bf"
            ]
        ]
    },
    {
        "id": "7a236cd81325a6bf",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get now_concert_id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_concert_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 860,
        "wires": [
            [
                "257436c7ac893760"
            ]
        ]
    },
    {
        "id": "257436c7ac893760",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 860,
        "wires": [
            [
                "111848722b36d6a8"
            ]
        ]
    },
    {
        "id": "111848722b36d6a8",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_concert_id: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 860,
        "wires": [
            [
                "ccd8e4f8e308b295"
            ]
        ]
    },
    {
        "id": "afbc7aafa5111665",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 860,
        "wires": []
    },
    {
        "id": "28836c67579e231e",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/like",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 800,
        "y": 1360,
        "wires": [
            [
                "abe785dd34ce777f",
                "6809cbb61a3d1cd5"
            ]
        ]
    },
    {
        "id": "abe785dd34ce777f",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 860,
        "y": 1420,
        "wires": []
    },
    {
        "id": "6809cbb61a3d1cd5",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "log prepare",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"like\",\n        user: msg.payload.u,\n        now: msg.payload.now\n    }\n    \n}\n\n\n\n//setvoltoredis('log:likes:'+timestamp, logmsg)\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1360,
        "wires": [
            [
                "b08be3f22c354647"
            ],
            [
                "fca413823c5d0b31"
            ]
        ]
    },
    {
        "id": "09f623f2ab6a9cef",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:likes",
        "func": "let concert_id = +msg.payload.now.now_concert_id;\n\nlet event_id = +msg.payload.now.now_event_id;\n\nlet eventlikes = +msg.payload.now.now_event_likes + 1;\n\n\n\nlet name = \"concert:\" + concert_id + \":event:\" + event_id + \":likes\"\nmsg.payload = [name, eventlikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1580,
        "wires": [
            [
                "6f8b431dcb4460f9"
            ]
        ]
    },
    {
        "id": "6f8b431dcb4460f9",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2060,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "b08be3f22c354647",
        "type": "switch",
        "z": "e6bc8fcb02c15518",
        "name": "is have_spisok?",
        "property": "payload.efir.now_on_scene.have_spisok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1460,
        "y": 1360,
        "wires": [
            [
                "6db523271c618787",
                "48e155db5abba31f",
                "c424350b48465bfb",
                "2f152ff6652ca88a"
            ],
            [
                "09f623f2ab6a9cef",
                "68c58d8c3bde1bac"
            ]
        ]
    },
    {
        "id": "6db523271c618787",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:likes",
        "func": "let concert_id = +msg.payload.now.now_concert_id;\n\nlet event_id = +msg.payload.now.now_event_id;\n\nlet eventlikes = +msg.payload.now.now_event_likes + 1;\n\n\n\nlet name = \"concert:\" + concert_id + \":event:\"+event_id+\":likes\"\nmsg.payload = [name, eventlikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1380,
        "wires": [
            [
                "1cc9ead639aacddf"
            ]
        ]
    },
    {
        "id": "1cc9ead639aacddf",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2060,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "48e155db5abba31f",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write to concert:event:track:",
        "func": "let concert_id = +msg.payload.now.now_concert_id;\nlet event_id = +msg.payload.now.now_event_id;\nlet track_id = +msg.payload.now.now_track_id;\nlet tracklikes = +msg.payload.now.now_track_likes + 1;\n\nlet name = \"concert:\" + concert_id + \":event:\" + event_id + \":track:\" + track_id\nmsg.payload = [name, tracklikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1460,
        "wires": [
            [
                "b64e689b750a033c"
            ]
        ]
    },
    {
        "id": "b64e689b750a033c",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2060,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "4fcb06293ab6902e",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/get-efir",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1040,
        "wires": [
            [
                "b6b1628b36c4d46e",
                "3e7b4b1b19a15a60"
            ]
        ]
    },
    {
        "id": "1f954ea495c6a0af",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 620,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b6b1628b36c4d46e",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get efir",
        "func": "\nmsg.payload = [];\nmsg.topic = \"efir\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1040,
        "wires": [
            [
                "19438dcdbbf7fa51"
            ]
        ]
    },
    {
        "id": "19438dcdbbf7fa51",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "1f954ea495c6a0af"
            ]
        ]
    },
    {
        "id": "c424350b48465bfb",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write now_track_likes",
        "func": "let tracklikes = +msg.payload.now.now_track_likes + 1;\nlet name = \"now_track_likes\";\n\nglobal.set(name, tracklikes);\n\nmsg.payload = [name, tracklikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1420,
        "wires": [
            [
                "425f095739b1d3df"
            ]
        ]
    },
    {
        "id": "425f095739b1d3df",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2060,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "2f152ff6652ca88a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write now_event_likes",
        "func": "let eventlikes = +msg.payload.now.now_event_likes + 1;\nlet name = \"now_event_likes\";\n\nglobal.set(name, eventlikes);\n\nmsg.payload = [name, eventlikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1340,
        "wires": [
            [
                "5491074e822cb601"
            ]
        ]
    },
    {
        "id": "5491074e822cb601",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2060,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "68c58d8c3bde1bac",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write now_event_likes",
        "func": "let eventlikes = +msg.payload.now.now_event_likes + 1;\nlet name = \"now_event_likes\";\n\nglobal.set(name, eventlikes);\n\nmsg.payload = [name, eventlikes];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1540,
        "wires": [
            [
                "d38432a12aae7abe"
            ]
        ]
    },
    {
        "id": "d38432a12aae7abe",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2040,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "c969fa4c937f265b",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/change-concert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1120,
        "y": 1700,
        "wires": [
            [
                "594fec478a95bb0c",
                "ada12f3582ea6f1f"
            ]
        ]
    },
    {
        "id": "594fec478a95bb0c",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1140,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4b992fc87ca15884",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "check user rights",
        "func": "let userid = msg.payload.userid;\n\n\n\nif (userid == 248618038 ) {\n    node.warn(\"смена концерта\");\n    return [null,msg];\n}\n\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2120,
        "wires": [
            [
                "f614eb36569982c9"
            ],
            [
                "7308c520c3039313"
            ]
        ]
    },
    {
        "id": "ada12f3582ea6f1f",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "reduce-efir",
        "topic": "reduce-efir",
        "obj": true,
        "x": 1370,
        "y": 1700,
        "wires": []
    },
    {
        "id": "cd4338abceec439a",
        "type": "redis-in",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "f120eab2.0a60a8",
        "command": "blpop",
        "name": "reduce-efir",
        "topic": "reduce-efir",
        "obj": true,
        "timeout": 0,
        "x": 1040,
        "y": 2140,
        "wires": [
            [
                "e82b5dc08e9f63ce",
                "73bcd90742145d37"
            ]
        ]
    },
    {
        "id": "e82b5dc08e9f63ce",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 2260,
        "wires": []
    },
    {
        "id": "73bcd90742145d37",
        "type": "switch",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "cmd",
        "property": "payload.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "change-concert",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change-event",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change-track",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1190,
        "y": 2200,
        "wires": [
            [
                "4b992fc87ca15884"
            ],
            [
                "bbd47c7fd63d1c8d"
            ],
            [
                "48ceaa851ec514a2"
            ]
        ]
    },
    {
        "id": "60a8ab7079b924e2",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "change-concert",
        "info": "",
        "x": 1400,
        "y": 2080,
        "wires": []
    },
    {
        "id": "7308c520c3039313",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "reduce ",
        "func": "\nconst bands = global.get(\"bands\");\nconst concerts = global.get(\"concerts\");\nconst setvoltoredis = global.get('setvol');\n\n\nlet isshowgo = msg.payload.isshowgo;\nlet now_on_scene = {};\nlet efir = {};\n\nlet concertid = +msg.payload.id;\nlet show_name = concerts[concertid].attributes.show_name;\nlet event_name = concerts[concertid].attributes.spisok[0].title;\nlet ploschadka = concerts[concertid].attributes.ploschadka;\n\nif (isshowgo) {\n//включить концерт\n    now_on_scene = {\n        band_rtid: null,\n        band_name: null,\n        band_town: '',\n        have_spisok: false,\n        track_id: null,\n        track_name: null,\n        track_word_author: null,\n        track_music_author: null,\n        track_words: null,\n        is_premiere: null,\n        actual_spisok_pesen: [],\n    }\n\n    global.set('now_on_scene', now_on_scene)\n\n    efir = {\n        now_on_scene: now_on_scene,\n        start: concerts[concertid].attributes.start_date,\n        is_show_go: true,\n        concert_id: concertid,\n        show_name: show_name,\n        event_id: null,\n        event_name: \"ключ на старт\",\n        ploschadka_type: \"концертная площадка\",\n        ploschadka: ploschadka\n    }\n    global.set('efir', efir);\n\n    setvoltoredis(\"now_concert_id\", concertid);\n    setvoltoredis(\"now_event_id\", null);\n    setvoltoredis(\"now_track_id\", null);\n    setvoltoredis(\"now_event_likes\", 0);\n    setvoltoredis(\"now_track_likes\", 0);\n\n    setvoltoredis(\"efir\", efir);\n\n} else {\n//выключить концерт\n    now_on_scene = {\n        band_rtid: null,\n        band_name: null,\n        band_town: null,\n        have_spisok: false,\n        track_id: null,\n        track_name: null,\n        track_word_author: null,\n        track_music_author: null,\n        track_words: null,\n        is_premiere: null,\n        actual_spisok_pesen: [],\n    }\n    global.set('now_on_scene', now_on_scene)\n\n    efir = {\n        now_on_scene: now_on_scene,\n        is_show_go: false,\n        start: concerts[concertid].attributes.start_date,\n        concert_id: null,\n        show_name: null,\n        event_id: null,\n        event_name: null,\n        ploschadka_type: null,\n        ploschadka: null\n    }\n\n    global.set('efir', efir);\n\n    setvoltoredis(\"now_concert_id\", null);\n    setvoltoredis(\"now_event_id\", null);\n    setvoltoredis(\"now_track_id\", null);\n    setvoltoredis(\"now_event_likes\", null);\n    setvoltoredis(\"now_track_likes\", null);\n\n    setvoltoredis(\"efir\", efir);\n\n}\n\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2140,
        "wires": [
            [
                "101b3d9e856b7668"
            ]
        ]
    },
    {
        "id": "eafa6c70a97c461e",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 2140,
        "wires": []
    },
    {
        "id": "d819345372846ee9",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 520,
        "wires": []
    },
    {
        "id": "c39429d731db8789",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "concerts data",
        "func": "let data = msg.payload\n\n\n\nglobal.set('concerts', data);\nmsg.payload = [\"concerts\", JSON.stringify(data)];\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 480,
        "wires": [
            [
                "e944fd024381d4d8"
            ]
        ]
    },
    {
        "id": "e944fd024381d4d8",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1820,
        "y": 480,
        "wires": [
            [
                "2684ce21c0749870"
            ]
        ]
    },
    {
        "id": "2684ce21c0749870",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1950,
        "y": 480,
        "wires": []
    },
    {
        "id": "25d732febc5f21bc",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "concerts data",
        "func": "let data = msg.payload.bands.concerts.data\n\n\n\n\nmsg.payload = data;\nmsg.topic = \"\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 480,
        "wires": [
            [
                "71c16ce67249c8e2"
            ]
        ]
    },
    {
        "id": "71c16ce67249c8e2",
        "type": "split",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1350,
        "y": 480,
        "wires": [
            [
                "ebeabc9dd5fcebac"
            ]
        ]
    },
    {
        "id": "ebeabc9dd5fcebac",
        "type": "join",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "payload.id",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1490,
        "y": 480,
        "wires": [
            [
                "c39429d731db8789"
            ]
        ]
    },
    {
        "id": "b2490540ed5bdc78",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "setvol(id,vol)",
        "func": "\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "\nlet setvol = function (id = msg.payload.id, vol = msg.payload.vol) {\n\n    let promise = new Promise((resolve, reject) => {\n        msg.resolve = resolve;\n        msg.reject = reject;\n    });\n\n\n    msg.topic = \"\";\n\n\n    msg.payload = [id, JSON.stringify(vol)];\n\n    node.send(Object.assign({}, msg));\n\n    return promise;\n};\n\nglobal.set('setvol', setvol);\n\n\n",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 200,
        "wires": [
            [
                "74aaa1c5d7383fa1"
            ]
        ]
    },
    {
        "id": "379caabfdf8084fd",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "0.7",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.7",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1490,
        "y": 200,
        "wires": [
            [
                "b2490540ed5bdc78"
            ]
        ]
    },
    {
        "id": "74aaa1c5d7383fa1",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1820,
        "y": 200,
        "wires": [
            [
                "61eef940dc60bd25"
            ]
        ]
    },
    {
        "id": "61eef940dc60bd25",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "resolve",
        "func": "msg.resolve(msg.payload);\n\n// reject\n// setTimeout(function () {\n//     msg.reject({message: 'Could not request joke'});\n// }, 2000);",
        "outputs": "0",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1980,
        "y": 200,
        "wires": []
    },
    {
        "id": "57e20c6619e09c41",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "setvol (\"test\")",
        "func": "let id = \"test\";\nlet vol = \"test\";\nconst gbl = global.get('setvol')(id, vol);\n\ngbl.then(gbl => {\n\n    msg.payload = gbl;\n\n\n    node.status({ fill: \"green\", shape: \"dot\" });\n    node.send(msg);\n\n}).catch(error => {\n\n\n    node.status({ fill: \"red\", shape: \"dot\" });\n\n    node.error(error);\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2370,
        "y": 240,
        "wires": [
            [
                "2a2162d277cf44fa"
            ]
        ]
    },
    {
        "id": "2a2162d277cf44fa",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2550,
        "y": 240,
        "wires": []
    },
    {
        "id": "0b4de6b1424e5898",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "test",
        "payloadType": "str",
        "x": 2190,
        "y": 240,
        "wires": [
            [
                "57e20c6619e09c41"
            ]
        ]
    },
    {
        "id": "2346e79be98c6f05",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/change-event",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1110,
        "y": 1820,
        "wires": [
            [
                "278764a4b7f0a186",
                "c3cab2f8b12c8680"
            ]
        ]
    },
    {
        "id": "278764a4b7f0a186",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1140,
        "y": 1860,
        "wires": []
    },
    {
        "id": "c3cab2f8b12c8680",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "reduce-efir",
        "topic": "reduce-efir",
        "obj": true,
        "x": 1370,
        "y": 1820,
        "wires": []
    },
    {
        "id": "bbd47c7fd63d1c8d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "check user rights",
        "func": "const bands = global.get(\"bands\");\n\n\nlet userid = msg.payload.userid;\n\n\n\nif (userid == 248618038) {\n    node.warn(\"смена события\");\n    return [null,msg];\n}\n\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2260,
        "wires": [
            [],
            [
                "096f7ffc3f07ea41"
            ]
        ]
    },
    {
        "id": "abb3375f3abbf228",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "change-event",
        "info": "",
        "x": 1390,
        "y": 2220,
        "wires": []
    },
    {
        "id": "6f8c25c6532c82cc",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "reduce ",
        "func": "\nconst bands = global.get(\"bands\");\nconst concerts = global.get(\"concerts\");\nconst setvoltoredis = global.get('setvol'); //(id,vol)\nconst getvolfromredis = global.get('getvol'); //(id)\n\n\n\nlet now_on_scene = {};\nlet efir = {};\n\nlet concertid = +msg.payload.concert.id;\nlet show_name = concerts[concertid].attributes.show_name;\nlet event_id = +msg.payload.event.id;\nlet event_i = +msg.payload.event_i;\nlet track_id = 0;\nlet havespisok = false;\n\nlet event_name = \"\";\n\n\n//собираем now_on_scene\nif (concerts[concertid].attributes.spisok[event_i].band.data == null) {\n    //если не группа\n    event_name = concerts[concertid].attributes.spisok[event_i].title;\n    now_on_scene = {\n        band_rtid: null,\n        band_name: event_name,\n        band_town: '',\n        have_spisok: false,\n        track_id: null,\n        track_name: null,\n        track_word_author: null,\n        track_music_author: null,\n        track_words: null,\n        is_premiere: null,\n        actual_spisok_pesen: [],\n        atists: []\n    }\n\n} else {\n    //если группа\n    event_name = concerts[concertid].attributes.spisok[event_i].band.data.attributes.band_name;\n\n    let bandid = concerts[concertid].attributes.spisok[event_i].band.data.id;\n\n\n    if (bands[bandid].attributes.spisok[0]) {\n        havespisok = true;\n\n    }\n\n    now_on_scene = {\n        band_rtid: bandid,\n        band_name: bands[bandid].attributes.band_name,\n        band_town: bands[bandid].attributes.town,\n        small_text: bands[bandid].attributes.small_text || '',\n        bandlogo: bands[bandid].attributes.group_logo.data ? bands[bandid].attributes.group_logo.data.attributes.url : '',\n        have_spisok: havespisok,\n        track_id: havespisok ? 0 : null,\n        track_name: havespisok ? bands[bandid].attributes.spisok[0].name : null,\n        track_word_author: havespisok ? bands[bandid].attributes.spisok[0].words_rights : null,\n        track_music_author: havespisok ? bands[bandid].attributes.spisok[0].music_rights : null,\n        track_words: havespisok ? bands[bandid].attributes.spisok[0].text : null,\n        is_premiere: havespisok ? bands[bandid].attributes.spisok[0].is_premiere : null,\n        actual_spisok_pesen: havespisok ? bands[bandid].attributes.spisok : [],\n        artists: bands[bandid].attributes.artists ? bands[bandid].attributes.artists.data : []\n    }\n}\n\nlet ploschadka = concerts[concertid].attributes.ploschadka;\n\n\n\n\nglobal.set('now_on_scene', now_on_scene)\n\nefir = {\n    now_on_scene: now_on_scene,\n    is_show_go: true,\n    concert_id: concertid,\n    start: concerts[concertid].attributes.start_date,\n    show_name: show_name,\n    event_id: event_id,\n    event_name: event_name,\n    ploschadka_type: \"концертная площадка\",\n    ploschadka: ploschadka\n}\nglobal.set('efir', efir);\n\nlet eventlikes = msg.payload.nexteventlikes;\nlet tracklikes = msg.payload.nexttracklikes;\n\n\n\nsetvoltoredis(\"now_concert_id\", concertid);\nsetvoltoredis(\"now_event_id\", event_id);\nsetvoltoredis(\"now_track_id\", 0);\nsetvoltoredis(\"now_event_likes\", eventlikes);\nsetvoltoredis(\"now_track_likes\", tracklikes);\n\nsetvoltoredis(\"efir\", efir);\n\n\n\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 2260,
        "wires": [
            [
                "bfb7c56511f9eb99"
            ]
        ]
    },
    {
        "id": "bfb7c56511f9eb99",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 2260,
        "wires": []
    },
    {
        "id": "de50798f492a4c43",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/change-track",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1110,
        "y": 1940,
        "wires": [
            [
                "9e3a2207e45ff541",
                "9341d84ec0dec8c4"
            ]
        ]
    },
    {
        "id": "9e3a2207e45ff541",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1140,
        "y": 1980,
        "wires": []
    },
    {
        "id": "9341d84ec0dec8c4",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "reduce-efir",
        "topic": "reduce-efir",
        "obj": true,
        "x": 1370,
        "y": 1940,
        "wires": []
    },
    {
        "id": "48ceaa851ec514a2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "check user rights",
        "func": "let userid = msg.payload.userid;\nconst bands = global.get(\"bands\");\n\n\n\nif (userid == bands[+msg.payload.bandid].attributes.mngr_id) {\n    node.warn(\"смена трека\");\n    return [null,msg];\n}\n\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2520,
        "wires": [
            [],
            [
                "7632d5e993f72a2d"
            ]
        ]
    },
    {
        "id": "2f762396f721e396",
        "type": "comment",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "change-track",
        "info": "",
        "x": 1390,
        "y": 2480,
        "wires": []
    },
    {
        "id": "31d4dd7ea6aeeaec",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "reduce ",
        "func": "\nconst bands = global.get(\"bands\");\nconst concerts = global.get(\"concerts\");\nconst setvoltoredis = global.get('setvol'); //(id,vol)\nconst getvolfromredis = global.get('getvol'); //(id)\n\n\n\n\n\n\n\n\nsetvoltoredis(\"now_track_id\", msg.payload.track_i);\n\nsetvoltoredis(\"now_track_likes\", msg.payload.nextlikes);\n\n\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2150,
        "y": 2520,
        "wires": [
            [
                "bdd30bde8619ece1"
            ]
        ]
    },
    {
        "id": "bdd30bde8619ece1",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2330,
        "y": 2520,
        "wires": []
    },
    {
        "id": "4950fa898d2268d2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "reduce ",
        "func": "\nconst bands = global.get(\"bands\");\nconst concerts = global.get(\"concerts\");\nconst setvoltoredis = global.get('setvol'); //(id,vol)\nconst getvolfromredis = global.get('getvol'); //(id)\n\n\n\nlet now_on_scene = {};\nlet efir = {};\n\nlet concertid = +msg.payload.concertid;\n\n\n\n\nlet event_i = +msg.payload.now_event_id;\n\n\nlet show_name = concerts[concertid].attributes.show_name;\n\n\nlet track_i = +msg.payload.track_i;\n\nlet havespisok = false;\n\nlet event_name = \"\";\n\n\n//собираем now_on_scene\nif (concerts[concertid].attributes.spisok[event_i].band.data == null) {\n    //если не группа\n    event_name = concerts[concertid].attributes.spisok[event_i].title;\n    now_on_scene = {\n        band_rtid: null,\n        band_name: event_name,\n        band_town: '',\n        have_spisok: false,\n        track_id: null,\n        track_name: null,\n        track_word_author: null,\n        track_music_author: null,\n        track_words: null,\n        is_premiere: null,\n        actual_spisok_pesen: [],\n    }\n\n} else {\n    //если группа\n    event_name = concerts[concertid].attributes.spisok[event_i].band.data.attributes.band_name;\n\n    let bandid = concerts[concertid].attributes.spisok[event_i].band.data.id;\n\n\n    if (bands[bandid].attributes.spisok[0]) {\n        havespisok = true;\n\n    }\n\n\n    now_on_scene = {\n        band_rtid: bandid,\n        band_name: bands[bandid].attributes.band_name,\n        band_town: bands[bandid].attributes.town,\n        small_text: bands[bandid].attributes.small_text,\n        bandlogo: bands[bandid].attributes.group_logo.data.attributes.url,\n        have_spisok: havespisok,\n        track_id: havespisok ? bands[bandid].attributes.attributes.spisok[track_i].id : null,\n        track_name: havespisok ? bands[bandid].attributes.spisok[track_i].name : null,\n        track_word_author: havespisok ? bands[bandid].attributes.spisok[track_i].words_rights : null,\n        track_music_author: havespisok ? bands[bandid].attributes.spisok[track_i].music_rights : null,\n        track_words: havespisok ? bands[bandid].attributes.spisok[track_i].text : null,\n        is_premiere: havespisok ? bands[bandid].attributes.spisok[track_i].is_premiere : null,\n        actual_spisok_pesen: havespisok ? bands[bandid].attributes.spisok : [],\n    }\n}\n\nlet ploschadka = concerts[concertid].attributes.ploschadka;\n\n\n\n\nglobal.set('now_on_scene', now_on_scene)\n\nefir = {\n    now_on_scene: now_on_scene,\n    is_show_go: true,\n    concert_id: concertid,\n    show_name: show_name,\n    event_id: event_i,\n    event_name: event_name,\n    ploschadka_type: \"концертная площадка\",\n    ploschadka: ploschadka\n}\nglobal.set('efir', efir);\n\nlet eventlikes = 0;\nconst now_event_likes = getvolfromredis(\"now_event_likes\");\nnow_event_likes.then(res => {\n\n    eventlikes = res;\n\n}).catch(error => {\n    node.status({ fill: \"red\", shape: \"dot\" });\n    node.error(error);\n});\n\nlet tracklikes = 0;\nconst now_track_likes = getvolfromredis(\"now_track_likes\");\nnow_track_likes.then(res => {\n\n    tracklikes = res;\n\n}).catch(error => {\n    node.status({ fill: \"red\", shape: \"dot\" });\n    node.error(error);\n});\n\n\nsetvoltoredis(\"now_track_id\", track_i);\n\nsetvoltoredis(\"now_track_likes\", havespisok ? tracklikes : null);\n\nsetvoltoredis(\"efir\", efir);\n\n\n\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "583d29cf36b68fc4",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get now_event_id",
        "func": "\nmsg.payload0 = msg.payload;\nmsg.payload = [];\nmsg.topic = \"now_event_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2580,
        "wires": [
            [
                "2d9e2e90c0c843dc"
            ]
        ]
    },
    {
        "id": "2d9e2e90c0c843dc",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2580,
        "wires": [
            [
                "45dc2dd571a1ea7b"
            ]
        ]
    },
    {
        "id": "45dc2dd571a1ea7b",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "msg.now = {...msg.now,\n    now_event_id: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2580,
        "wires": [
            [
                "e4b6f177902056b1"
            ]
        ]
    },
    {
        "id": "e4b6f177902056b1",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get now_track_id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_track_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2640,
        "wires": [
            [
                "c8ad9f67bf8d5cff"
            ]
        ]
    },
    {
        "id": "c8ad9f67bf8d5cff",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2640,
        "wires": [
            [
                "274688907d368375"
            ]
        ]
    },
    {
        "id": "274688907d368375",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_track_id: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2640,
        "wires": [
            [
                "f12fe7c127d3ae70"
            ]
        ]
    },
    {
        "id": "f12fe7c127d3ae70",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get now_event_likes",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_event_likes\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2700,
        "wires": [
            [
                "be8f182b46209dd1"
            ]
        ]
    },
    {
        "id": "be8f182b46209dd1",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2700,
        "wires": [
            [
                "07951a618702ccd5"
            ]
        ]
    },
    {
        "id": "07951a618702ccd5",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_event_likes: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2700,
        "wires": [
            [
                "844ffcc46ab2d193"
            ]
        ]
    },
    {
        "id": "844ffcc46ab2d193",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get now_track_likes",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_track_likes\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2760,
        "wires": [
            [
                "5b5e5db34ffdb1a8"
            ]
        ]
    },
    {
        "id": "5b5e5db34ffdb1a8",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2760,
        "wires": [
            [
                "bbee8c1fcd958013"
            ]
        ]
    },
    {
        "id": "bbee8c1fcd958013",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_track_likes: msg.payload\n};\n\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2760,
        "wires": [
            [
                "1da35678c59b8513"
            ]
        ]
    },
    {
        "id": "1da35678c59b8513",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get now_concert_id",
        "func": "\nmsg.payload = [];\nmsg.topic = \"now_concert_id\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2820,
        "wires": [
            [
                "79adfb68fd65cf2a"
            ]
        ]
    },
    {
        "id": "79adfb68fd65cf2a",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2820,
        "wires": [
            [
                "f0e089676488c6a5"
            ]
        ]
    },
    {
        "id": "f0e089676488c6a5",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    now_concert_id: msg.payload\n};\nmsg.payload = {\n    ...msg.payload0,\n    ...msg.now\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2820,
        "wires": [
            [
                "0b4988106dc31a60"
            ]
        ]
    },
    {
        "id": "0b4988106dc31a60",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get next likes",
        "func": "\nlet name = \"concert:\" + msg.payload.now_concert_id + \":event:\" + msg.payload.now_event_id + \":track:\" + msg.payload.track_i;\n\nmsg.payload0 = msg.payload;\nmsg.payload = [];\nmsg.topic = name;\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2880,
        "wires": [
            [
                "70a38315b42fe4fa"
            ]
        ]
    },
    {
        "id": "70a38315b42fe4fa",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2880,
        "wires": [
            [
                "7b6ddf58fb7a3b2c"
            ]
        ]
    },
    {
        "id": "7b6ddf58fb7a3b2c",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "\nmsg.payload = {\n    ...msg.payload0,\n    nextlikes: +msg.payload\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2880,
        "wires": [
            [
                "31d4dd7ea6aeeaec"
            ]
        ]
    },
    {
        "id": "d8cedba031d2d8fa",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get next event likes",
        "func": "\nlet name = \"concert:\" + msg.payload.concert.id + \":event:\" + msg.payload.event.id + \":likes\";\n\nmsg.payload0 = msg.payload;\nmsg.payload = [];\nmsg.topic = name;\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2320,
        "wires": [
            [
                "132a8ceceb5f5dde"
            ]
        ]
    },
    {
        "id": "132a8ceceb5f5dde",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2320,
        "wires": [
            [
                "a6d80f80063cf204"
            ]
        ]
    },
    {
        "id": "a6d80f80063cf204",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "\nmsg.payload = {\n    ...msg.payload0,\n    nexteventlikes: +msg.payload\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2320,
        "wires": [
            [
                "de126b502575e8dd"
            ]
        ]
    },
    {
        "id": "de126b502575e8dd",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "get 0 track likes",
        "func": "\nlet name = \"concert:\" + msg.payload.concert.id + \":event:\" + msg.payload.event.id + \":track:\" + \"0\";\n\nmsg.payload0 = msg.payload;\nmsg.payload = [];\nmsg.topic = name;\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2380,
        "wires": [
            [
                "9b4693ca4dad50a0"
            ]
        ]
    },
    {
        "id": "9b4693ca4dad50a0",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1780,
        "y": 2380,
        "wires": [
            [
                "945ef5f0c78539fa"
            ]
        ]
    },
    {
        "id": "945ef5f0c78539fa",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "inject pole",
        "func": "\nmsg.payload = {\n    ...msg.payload0,\n    nexttracklikes: +msg.payload\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2380,
        "wires": [
            [
                "6f8c25c6532c82cc"
            ]
        ]
    },
    {
        "id": "cc7bfb87f6dd4134",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 170,
        "y": 2540,
        "wires": []
    },
    {
        "id": "51287414f3af88b3",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 2680,
        "wires": []
    },
    {
        "id": "20fc07374ab0f37d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "global.set('users_on_efir'",
        "func": "let user_vkid = msg.payload.user.id || 1;\nlet users_on_efir = global.get('users_on_efir') || [];\n\n\n\n\n//node.warn(msg.payload)\n\nlet data = {\n    \n    user_vkid: user_vkid,\n    city: msg.payload.user.city || \"\",\n    sex: msg.payload.user.sex || 0\n}\nmsg = {\n    payload : data\n}\nusers_on_efir.push(data);\nglobal.set('users_on_efir', users_on_efir);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "221c98a4eab0fa44",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "1846a30219e324ea",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/get-efir2",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 860,
        "y": 1560,
        "wires": [
            [
                "6b82b60f9cdd806e",
                "20fc07374ab0f37d"
            ]
        ]
    },
    {
        "id": "0f2e3e329d1bd800",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 1560,
        "wires": []
    },
    {
        "id": "6b82b60f9cdd806e",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get efir",
        "func": "\nmsg.payload = [];\nmsg.topic = \"efir\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1560,
        "wires": [
            [
                "37b60f8af39a5289"
            ]
        ]
    },
    {
        "id": "37b60f8af39a5289",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1200,
        "y": 1560,
        "wires": [
            [
                "0f2e3e329d1bd800"
            ]
        ]
    },
    {
        "id": "3e7b4b1b19a15a60",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 980,
        "wires": []
    },
    {
        "id": "6904303bca414396",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "user stat calculate every 2 sec",
        "func": "\nlet users_on_efir = global.get('users_on_efir') || [];\nglobal.set('users_on_efir', []);\n\nlet non_auth_users = []\nlet non_auth_users_count = 0\nlet auth_users = []\nlet auth_users_count = 0\n\nlet sex0_users = []\nlet sex0_users_count = 0\nlet sex1_users = []\nlet sex1_users_count = 0\nlet sex2_users = []\nlet sex2_users_count = 0\nlet townstat = []\nlet unic_towns = []\nlet readytownstat = []\n\nfunction unique(arr) {\n    let result = [];\n\n    for (let str of arr) {\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n\n    return result;\n}\n\nusers_on_efir.forEach(function (u) {\n    if (u.user_vkid > 0) {\n        auth_users.push(u.user_vkid)\n        townstat.push(u.city)\n        if (u.sex == 0) { sex0_users.push(0) }\n        if (u.sex == 1) { sex1_users.push(1) }\n        if (u.sex == 2) { sex2_users.push(2) }\n    } else {\n        non_auth_users.push(0)\n    }\n});\n\n\nnon_auth_users_count = non_auth_users.length\nauth_users_count = auth_users.length\nsex0_users_count = sex0_users.length\nsex1_users_count = sex1_users.length\nsex2_users_count = sex2_users.length\n\nunic_towns = unique(townstat)\n\nfunction count(arr, value) {\n    if (arr.length === 1) {\n        return arr[0] === value ? 1 : 0;\n    } else {\n        return (arr.shift() === value ? 1 : 0) + count(arr, value);\n    }\n}\nunic_towns.forEach(function (town) {\n\n    readytownstat.push({ town: town, count: count(townstat, town)})\n\n});\n\n\nmsg.payload= {\n        non_auth_users_count: non_auth_users_count,\n        auth_users_count: auth_users_count,\n        sex0_users_count: sex0_users_count,\n        sex1_users_count: sex1_users_count,\n        sex2_users_count: sex2_users_count,\n        readytownstat: readytownstat\n}\n\nglobal.set('users_stat_now', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2410,
        "y": 360,
        "wires": [
            [
                "8fb481e99eea6a4a",
                "1750a2040538a1f9",
                "b3fecd62390a243d",
                "3c49a29e0851cf80",
                "169af29a9764dba3",
                "f53cbf23bcd73152",
                "edb33159f6143614"
            ]
        ]
    },
    {
        "id": "8fb481e99eea6a4a",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2630,
        "y": 360,
        "wires": []
    },
    {
        "id": "71245b933f97f474",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2150,
        "y": 360,
        "wires": [
            [
                "6904303bca414396"
            ]
        ]
    },
    {
        "id": "1750a2040538a1f9",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write non_auth_users_count",
        "func": "let non_auth_users_count = +msg.payload.non_auth_users_count;\nlet name = \"non_auth_users_count\";\n\nglobal.set(name, non_auth_users_count);\n\nmsg.payload = [name, non_auth_users_count];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 440,
        "wires": [
            [
                "ea2c96f048a34172"
            ]
        ]
    },
    {
        "id": "ea2c96f048a34172",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "b3fecd62390a243d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write auth_users_count",
        "func": "let auth_users_count = +msg.payload.auth_users_count;\nlet name = \"auth_users_count\";\n\nglobal.set(name, auth_users_count);\n\nmsg.payload = [name, auth_users_count];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 500,
        "wires": [
            [
                "5e0ad0e4383a9faa"
            ]
        ]
    },
    {
        "id": "5e0ad0e4383a9faa",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3c49a29e0851cf80",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write sex0_users_count",
        "func": "let sex0_users_count = +msg.payload.sex0_users_count;\nlet name = \"sex0_users_count\";\n\nglobal.set(name, sex0_users_count);\n\nmsg.payload = [name, sex0_users_count];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 560,
        "wires": [
            [
                "bf3a0f286780051b"
            ]
        ]
    },
    {
        "id": "bf3a0f286780051b",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "169af29a9764dba3",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write sex1_users_count",
        "func": "let sex1_users_count = +msg.payload.sex1_users_count;\nlet name = \"sex1_users_count\";\n\nglobal.set(name, sex1_users_count);\n\nmsg.payload = [name, sex1_users_count];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 620,
        "wires": [
            [
                "62a5e4c0605304ca"
            ]
        ]
    },
    {
        "id": "62a5e4c0605304ca",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "f53cbf23bcd73152",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write sex2_users_count",
        "func": "let sex2_users_count = +msg.payload.sex2_users_count;\nlet name = \"sex2_users_count\";\n\nglobal.set(name, sex2_users_count);\n\nmsg.payload = [name, sex2_users_count];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2570,
        "y": 680,
        "wires": [
            [
                "ebe267ecfd60301a"
            ]
        ]
    },
    {
        "id": "ebe267ecfd60301a",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "edb33159f6143614",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "write readytownstat",
        "func": "let readytownstat = msg.payload.readytownstat;\nlet name = \"readytownstat\";\n\nglobal.set(name, readytownstat);\n\nmsg.payload = [name, JSON.stringify(readytownstat)];\nmsg.topic = \"\";\n\nnode.status({ fill: \"green\", shape: \"ring\" });\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2550,
        "y": 740,
        "wires": [
            [
                "74de45a2e3a865b4"
            ]
        ]
    },
    {
        "id": "74de45a2e3a865b4",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "set",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 2780,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ccd8e4f8e308b295",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get non_auth_users_count",
        "func": "\nmsg.payload = [];\nmsg.topic = \"non_auth_users_count\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 920,
        "wires": [
            [
                "146ce55c2e5b3a9c"
            ]
        ]
    },
    {
        "id": "146ce55c2e5b3a9c",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 920,
        "wires": [
            [
                "9afa111a0a8e65b2"
            ]
        ]
    },
    {
        "id": "9afa111a0a8e65b2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    non_auth_users_count: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 920,
        "wires": [
            [
                "9a8e81659d3add1b"
            ]
        ]
    },
    {
        "id": "9a8e81659d3add1b",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get auth_users_count",
        "func": "\nmsg.payload = [];\nmsg.topic = \"auth_users_count\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 980,
        "wires": [
            [
                "559dfb3fefa5d479"
            ]
        ]
    },
    {
        "id": "559dfb3fefa5d479",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 980,
        "wires": [
            [
                "d5c3cbeb8ef79d15"
            ]
        ]
    },
    {
        "id": "d5c3cbeb8ef79d15",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    auth_users_count: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 980,
        "wires": [
            [
                "a9be71f5ca755cb4"
            ]
        ]
    },
    {
        "id": "a9be71f5ca755cb4",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get sex0_users_count",
        "func": "\nmsg.payload = [];\nmsg.topic = \"sex0_users_count\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1040,
        "wires": [
            [
                "35c3e34aa670b721"
            ]
        ]
    },
    {
        "id": "35c3e34aa670b721",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 1040,
        "wires": [
            [
                "2ca29bfe6f904fb8"
            ]
        ]
    },
    {
        "id": "2ca29bfe6f904fb8",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    sex0_users_count: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1040,
        "wires": [
            [
                "161527f3a0719a1c"
            ]
        ]
    },
    {
        "id": "161527f3a0719a1c",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get sex1_users_count",
        "func": "\nmsg.payload = [];\nmsg.topic = \"sex1_users_count\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1100,
        "wires": [
            [
                "8f72e4a9004ae4fd"
            ]
        ]
    },
    {
        "id": "8f72e4a9004ae4fd",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 1100,
        "wires": [
            [
                "98bbb507c04c78b4"
            ]
        ]
    },
    {
        "id": "98bbb507c04c78b4",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    sex1_users_count: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1100,
        "wires": [
            [
                "fdd69496c276fcd1"
            ]
        ]
    },
    {
        "id": "fdd69496c276fcd1",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get sex2_users_count",
        "func": "\nmsg.payload = [];\nmsg.topic = \"sex2_users_count\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 1160,
        "wires": [
            [
                "92b7ba54be7c60ec"
            ]
        ]
    },
    {
        "id": "92b7ba54be7c60ec",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 1160,
        "wires": [
            [
                "18d6f81aa55b67f8"
            ]
        ]
    },
    {
        "id": "18d6f81aa55b67f8",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    sex2_users_count: msg.payload\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1160,
        "wires": [
            [
                "48199f3bc7c9d8b7"
            ]
        ]
    },
    {
        "id": "48199f3bc7c9d8b7",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get readytownstat",
        "func": "\nmsg.payload = [];\nmsg.topic = \"readytownstat\";\n\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 1220,
        "wires": [
            [
                "280578ce939cee72"
            ]
        ]
    },
    {
        "id": "280578ce939cee72",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1480,
        "y": 1220,
        "wires": [
            [
                "2b39273f6f239cec"
            ]
        ]
    },
    {
        "id": "2b39273f6f239cec",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "inject pole",
        "func": "msg.now = {\n    ...msg.now,\n    readytownstat: JSON.parse(msg.payload)\n};\n\nmsg.payload = msg.now;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1220,
        "wires": [
            [
                "45494eb4a2594c20",
                "afbc7aafa5111665"
            ]
        ]
    },
    {
        "id": "62ca081db1cea529",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1320,
        "y": 3660,
        "wires": [
            [
                "fc75c30631466e1a"
            ]
        ]
    },
    {
        "id": "fc75c30631466e1a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "const getvolfromredis = global.get('getvol'); //(id)\nlet name = \"log:likes:*\";\nlet res = getvolfromredis(name);\n\nmsg.payload = res;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 3660,
        "wires": [
            [
                "74aff3936e1c4ed2"
            ]
        ]
    },
    {
        "id": "74aff3936e1c4ed2",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1910,
        "y": 3660,
        "wires": []
    },
    {
        "id": "ba433622.8c6178",
        "type": "catch",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 120,
        "wires": [
            [
                "ec2978af.3e0458"
            ]
        ]
    },
    {
        "id": "ec2978af.3e0458",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 250,
        "y": 120,
        "wires": []
    },
    {
        "id": "2a93e7ce.341078",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2320,
        "y": 1840,
        "wires": [
            [
                "d89709ef.fd9368"
            ]
        ]
    },
    {
        "id": "d89709ef.fd9368",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "let redis = context.flow.get('redis');\n\nredis.info().then((data)=>{\n    msg.payload = data\n    node.send(msg);\n})\n\n/*\nredis.call(\"anycmd\").then((data)=>{\n    msg.payload = data\n    node.send(msg);\n})*/",
        "outputs": 1,
        "noerr": 0,
        "x": 2550,
        "y": 1840,
        "wires": [
            [
                "f2e9c3a0.8f181"
            ]
        ]
    },
    {
        "id": "f2e9c3a0.8f181",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2870,
        "y": 1840,
        "wires": []
    },
    {
        "id": "fca413823c5d0b31",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1190,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1d56e89072bb1468",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "log prepare",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"bands-data-update\",\n       // user: msg.payload.u,\n       // now: msg.payload.now\n    }\n    \n}\n\n\n\n//setvoltoredis('log:likes:'+timestamp, logmsg)\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            [],
            [
                "28739418e906974e"
            ]
        ]
    },
    {
        "id": "28739418e906974e",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1210,
        "y": 360,
        "wires": []
    },
    {
        "id": "0e2b2ec122b5a3ec",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/get-likes",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 1600,
        "y": 1700,
        "wires": [
            [
                "1b7e10c81c708edf"
            ]
        ]
    },
    {
        "id": "f70ce0eeb3ecb909",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2120,
        "y": 1760,
        "wires": []
    },
    {
        "id": "1b7e10c81c708edf",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "msg.concert_id",
        "func": "const concerts = global.get(\"concerts\");\nconst spisok = concerts[msg.payload.concert_id].attributes.spisok;\nmsg.concert_id = msg.payload.concert_id;\nmsg.payload = spisok;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1700,
        "wires": [
            [
                "3d24454930879f6a"
            ]
        ]
    },
    {
        "id": "3d24454930879f6a",
        "type": "split",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1970,
        "y": 1700,
        "wires": [
            [
                "fa31e3a05bd65d57"
            ]
        ]
    },
    {
        "id": "fa31e3a05bd65d57",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "adress prepare",
        "func": "\nmsg.topic = 'concert:' + msg.concert_id + ':event:' + msg.payload.id +':likes';\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1760,
        "wires": [
            [
                "00d4365ce679c751"
            ]
        ]
    },
    {
        "id": "00d4365ce679c751",
        "type": "redis-command",
        "z": "e6bc8fcb02c15518",
        "server": "de2918815c34c8e3",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1820,
        "y": 1760,
        "wires": [
            [
                "d5470ca692c9816e"
            ]
        ]
    },
    {
        "id": "d5470ca692c9816e",
        "type": "join",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1970,
        "y": 1760,
        "wires": [
            [
                "f70ce0eeb3ecb909"
            ]
        ]
    },
    {
        "id": "f614eb36569982c9",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "no right change concert",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"no-right-change-concert\",\n        data: msg.payload,\n    }\n    \n}\n\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 2040,
        "wires": [
            [],
            [
                "aecce3128ea6b3df"
            ]
        ]
    },
    {
        "id": "aecce3128ea6b3df",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1930,
        "y": 2060,
        "wires": []
    },
    {
        "id": "d340af7f550b9a78",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 310,
        "y": 600,
        "wires": []
    },
    {
        "id": "101b3d9e856b7668",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "log change concert",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"change-concert\",\n        data: msg.payload,\n    }\n    \n}\n\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 2140,
        "wires": [
            [
                "eafa6c70a97c461e"
            ],
            [
                "26a4d5bbcd70e1f6"
            ]
        ]
    },
    {
        "id": "26a4d5bbcd70e1f6",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1810,
        "y": 2180,
        "wires": []
    },
    {
        "id": "1bb2bad940f96c9b",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/log-auth",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 480,
        "y": 1700,
        "wires": [
            [
                "97195124e6c910b6",
                "cafe0c1029389aa2"
            ]
        ]
    },
    {
        "id": "97195124e6c910b6",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 1760,
        "wires": []
    },
    {
        "id": "cafe0c1029389aa2",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "log prepare",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"auth\",\n        user: msg.payload.user,\n       \n    }\n    \n}\n\n\n\n//setvoltoredis('log:likes:'+timestamp, logmsg)\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1700,
        "wires": [
            [],
            [
                "72c8430c718d9ec7"
            ]
        ]
    },
    {
        "id": "72c8430c718d9ec7",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 830,
        "y": 1700,
        "wires": []
    },
    {
        "id": "3d549b6ce6a31672",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/qrcode-register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 540,
        "y": 1880,
        "wires": [
            [
                "3bf7ac23c0f37ef3",
                "2e669b418732588a",
                "7c57fe413cb4db82"
            ]
        ]
    },
    {
        "id": "3bf7ac23c0f37ef3",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1960,
        "wires": []
    },
    {
        "id": "2e669b418732588a",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 700,
        "y": 1980,
        "wires": []
    },
    {
        "id": "7c57fe413cb4db82",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "log prepare",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"qrcode-register\",\n        user_id: msg.payload.id,\n       \n    }\n    \n}\n\n\n\n//setvoltoredis('log:likes:'+timestamp, logmsg)\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 1880,
        "wires": [
            [],
            [
                "bfd7e2d16f8d7713"
            ]
        ]
    },
    {
        "id": "bfd7e2d16f8d7713",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 910,
        "y": 1880,
        "wires": []
    },
    {
        "id": "bd95275bca7b268f",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/lotereya-register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 300,
        "y": 2060,
        "wires": [
            [
                "eb3e6886a87e9707",
                "cec76b6da138d471",
                "1602b6fcae47d72a"
            ]
        ]
    },
    {
        "id": "eb3e6886a87e9707",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 2140,
        "wires": []
    },
    {
        "id": "cec76b6da138d471",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 640,
        "y": 2160,
        "wires": []
    },
    {
        "id": "1ec2bb40ff258cba",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "log prepare",
        "func": "let timestamp = Date.now()\nconst setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"lotereya-register\",\n        loterid: msg.req.query.loterid,\n        user: msg.payload.user,\n\n    }\n\n\n}\n\nlet users = [];\nusers.push(msg.payload.user);\n\nnode.warn(users)\nsetvoltoredis('loter:'+msg.req.query.loterid, users)\nreturn [msg, logdata];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 2060,
        "wires": [
            [],
            [
                "2fcada3f242cd848"
            ]
        ]
    },
    {
        "id": "2fcada3f242cd848",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 850,
        "y": 2060,
        "wires": []
    },
    {
        "id": "096f7ffc3f07ea41",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "log change event",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"change-event\",\n        data: msg.payload,\n    }\n    \n}\n\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 2260,
        "wires": [
            [
                "d8cedba031d2d8fa"
            ],
            [
                "7f21d0b7251e827f"
            ]
        ]
    },
    {
        "id": "7f21d0b7251e827f",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1830,
        "y": 2260,
        "wires": []
    },
    {
        "id": "7632d5e993f72a2d",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "name": "log change track",
        "func": "let timestamp = Date.now()\n//const setvoltoredis = global.get('setvol');\n\nlet logdata = {\n    topic:\"\",\n    payload: {\n        timestamp: timestamp,\n        event_type: \"change-track\",\n        data: msg.payload,\n    }\n    \n}\n\nreturn [msg, logdata];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 2520,
        "wires": [
            [
                "583d29cf36b68fc4"
            ],
            [
                "354e6d66fdf61c06"
            ]
        ]
    },
    {
        "id": "354e6d66fdf61c06",
        "type": "redis-out",
        "z": "e6bc8fcb02c15518",
        "g": "cf6819f53065cd71",
        "server": "f120eab2.0a60a8",
        "command": "rpush",
        "name": "log",
        "topic": "log",
        "obj": true,
        "x": 1810,
        "y": 2520,
        "wires": []
    },
    {
        "id": "7a207eebe04c982a",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/lotereya-getplayedusers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 3280,
        "wires": [
            [
                "764398a3020f608b",
                "505089659e283743"
            ]
        ]
    },
    {
        "id": "11f92cc0c664eac4",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 3280,
        "wires": []
    },
    {
        "id": "764398a3020f608b",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "get played users",
        "func": "const data = global.get('playedusers');\n\n\nfunction unique(arr) {\n    let result = [];\n\n    for (let str of arr) {\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n\n    return result;\n}\n\nmsg.payload = data;\nnode.status({fill: \"green\", shape: \"ring\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 3280,
        "wires": [
            [
                "11f92cc0c664eac4",
                "f9453790b0f26c8b"
            ]
        ]
    },
    {
        "id": "f9453790b0f26c8b",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 3180,
        "wires": []
    },
    {
        "id": "dcca7461ea414ffc",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 610,
        "y": 620,
        "wires": []
    },
    {
        "id": "7ebc26fef4a82810",
        "type": "inject",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1940,
        "y": 1920,
        "wires": [
            [
                "3ab9f72e15182d1a"
            ]
        ]
    },
    {
        "id": "3ab9f72e15182d1a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2120,
        "y": 1920,
        "wires": [
            [
                "d6a199ca15ddb264"
            ]
        ]
    },
    {
        "id": "d6a199ca15ddb264",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2290,
        "y": 1920,
        "wires": []
    },
    {
        "id": "97bf7a884b68b53d",
        "type": "http in",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "url": "/tete",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 560,
        "y": 3540,
        "wires": [
            [
                "2931ed1770e33666",
                "e596edb0d2e53506"
            ]
        ]
    },
    {
        "id": "57ed6baf4b907334",
        "type": "http response",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1000,
        "y": 3560,
        "wires": []
    },
    {
        "id": "2931ed1770e33666",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 3500,
        "wires": []
    },
    {
        "id": "e596edb0d2e53506",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "msg.payload = {a:2,d:3}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 3560,
        "wires": [
            [
                "57ed6baf4b907334"
            ]
        ]
    },
    {
        "id": "505089659e283743",
        "type": "debug",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 3180,
        "wires": []
    },
    {
        "id": "1602b6fcae47d72a",
        "type": "function",
        "z": "e6bc8fcb02c15518",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2060,
        "wires": [
            [
                "1ec2bb40ff258cba"
            ]
        ]
    },
    {
        "id": "cefe1bac23767666",
        "type": "redis-in",
        "z": "7f80e3ebbbbbf4fc",
        "server": "f120eab2.0a60a8",
        "command": "blpop",
        "name": "log",
        "topic": "log",
        "obj": true,
        "timeout": 0,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "5fcba84d46ab8066",
                "a46c9710250e23cf"
            ]
        ]
    },
    {
        "id": "5fcba84d46ab8066",
        "type": "debug",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 740,
        "wires": []
    },
    {
        "id": "a46c9710250e23cf",
        "type": "switch",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "property": "payload.event_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "like",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bands-data-update",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "no-right-change-concert",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change-concert",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "auth",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qrcode-register",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lotereya-register",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change-event",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "change-track",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 530,
        "y": 860,
        "wires": [
            [
                "9ca8261d64bffae9"
            ],
            [
                "0672c0c67a2d4bed"
            ],
            [
                "3d1768e2cada7241"
            ],
            [
                "0c0ff57e1297a30b"
            ],
            [
                "ecd64514117c1688"
            ],
            [
                "eb7883a382f3b5cd"
            ],
            [
                "18af4227dd06c34d"
            ],
            [
                "5d96390b050e54de"
            ],
            [
                "6f6c5c8122f8efb0"
            ]
        ]
    },
    {
        "id": "6193b88aa2db86ad",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM allc WHERE t > 1649921754114",
        "name": "select from table1",
        "x": 1970,
        "y": 1060,
        "wires": [
            [
                "0af8d15feeb9ee9a"
            ]
        ]
    },
    {
        "id": "f00cad593ad99738",
        "type": "inject",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "name": "таймер счетчика играющих юзеров",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1690,
        "y": 1060,
        "wires": [
            [
                "6193b88aa2db86ad"
            ]
        ]
    },
    {
        "id": "a123774fb3f16ddd",
        "type": "debug",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 1100,
        "wires": []
    },
    {
        "id": "885842cce837dc29",
        "type": "inject",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 300,
        "wires": [
            [
                "aa91ee65b3ac77ca"
            ]
        ]
    },
    {
        "id": "aa91ee65b3ac77ca",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "fixed",
        "sql": "DELETE from allc",
        "name": "del all in alllc ",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "381f7096427bd613"
            ]
        ]
    },
    {
        "id": "381f7096427bd613",
        "type": "debug",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "9ca8261d64bffae9",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    user: msg.payload.user,\n    now: msg.payload.now\n}\n\nmsg.payload = [msg.payload.timestamp, \"like\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 560,
        "wires": [
            [
                "887f3acc0921abf2"
            ]
        ]
    },
    {
        "id": "887f3acc0921abf2",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1180,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f7a6515be68e7dca",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "like",
        "info": "",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "0672c0c67a2d4bed",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type) VALUES ($t,$type)`\n\n\nmsg.payload = [msg.payload.timestamp, \"bans-data-update\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 640,
        "wires": [
            [
                "55b9ebba3b150928"
            ]
        ]
    },
    {
        "id": "55b9ebba3b150928",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1280,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "060c90a3410c6317",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "bands-data-update",
        "info": "",
        "x": 890,
        "y": 640,
        "wires": []
    },
    {
        "id": "bee5bb4413c83707",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "no-right-change-concert",
        "info": "",
        "x": 910,
        "y": 720,
        "wires": []
    },
    {
        "id": "3d1768e2cada7241",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    data: msg.payload\n}\n\nmsg.payload = [msg.payload.timestamp, \"no-right-change-concert\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 720,
        "wires": [
            [
                "0f95b5144e3643c8"
            ]
        ]
    },
    {
        "id": "0f95b5144e3643c8",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1320,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "0c0ff57e1297a30b",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    data: msg.payload\n}\n\nmsg.payload = [msg.payload.timestamp, \"change-concert\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "c03926dffbc15839"
            ]
        ]
    },
    {
        "id": "c03926dffbc15839",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1320,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "6f3a287869472033",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "change-concert",
        "info": "",
        "x": 880,
        "y": 800,
        "wires": []
    },
    {
        "id": "59acd435759eb2e8",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "auth",
        "info": "",
        "x": 850,
        "y": 880,
        "wires": []
    },
    {
        "id": "ecd64514117c1688",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    user: msg.payload.user,\n}\n\nmsg.payload = [msg.payload.timestamp, \"auth\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 880,
        "wires": [
            [
                "9b8b668a9066f86e"
            ]
        ]
    },
    {
        "id": "9b8b668a9066f86e",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1260,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "eb7883a382f3b5cd",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    user_id: msg.payload.user_id,\n}\n\nmsg.payload = [msg.payload.timestamp, \"qrcode-register\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 960,
        "wires": [
            [
                "9ce66f1f4cdc116b"
            ]
        ]
    },
    {
        "id": "9ce66f1f4cdc116b",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1260,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "129bbf7b8a60d685",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "qrcode-register",
        "info": "",
        "x": 880,
        "y": 960,
        "wires": []
    },
    {
        "id": "18af4227dd06c34d",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    user: msg.payload.user,\n    loterid: msg.payload.loterid\n}\n\nmsg.payload = [msg.payload.timestamp, \"lotereya-register\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1060,
        "wires": [
            [
                "45c16b9ca2e4a9cf"
            ]
        ]
    },
    {
        "id": "45c16b9ca2e4a9cf",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1260,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "1eb0d957ea14414d",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "name": "lotereya-register",
        "info": "",
        "x": 880,
        "y": 1060,
        "wires": []
    },
    {
        "id": "5d96390b050e54de",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    data: msg.payload\n}\n\nmsg.payload = [msg.payload.timestamp, \"change-event\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1180,
        "wires": [
            [
                "c9ba1528bc96bc40"
            ]
        ]
    },
    {
        "id": "c9ba1528bc96bc40",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1320,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "5122c33dfd86e11c",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "change-event",
        "info": "",
        "x": 870,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6f6c5c8122f8efb0",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "sql prepare",
        "func": "msg.topic = `INSERT INTO allc (t,type,data) VALUES ($t,$type,$data)`\nlet data = {\n    data: msg.payload\n}\n\nmsg.payload = [msg.payload.timestamp, \"change-track\", JSON.stringify(data)]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1260,
        "wires": [
            [
                "efd8cb3e8fe69cce"
            ]
        ]
    },
    {
        "id": "efd8cb3e8fe69cce",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "msg.topic",
        "sql": "INSERT INTO allc (t)\nVALUES( 'hello');",
        "name": "put into logs.db",
        "x": 1320,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "c1232d44612964a7",
        "type": "comment",
        "z": "7f80e3ebbbbbf4fc",
        "name": "change-track",
        "info": "",
        "x": 870,
        "y": 1260,
        "wires": []
    },
    {
        "id": "0af8d15feeb9ee9a",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "g": "bd7bd83cb043bc5c",
        "name": "выборка idlist",
        "func": "\nfunction unique(arr) {\n    let result = [];\n\n    for (let str of arr) {\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n\n    return result;\n}\n\n\n\nlet raw = msg.payload;\nlet rawlist = [];\nlet lt_users = [];\nlet ready_users = []\n\n//делаем нужную выборку\nraw.forEach(function (element, i) {\n    if (element.type == \"lotereya-register\") {\n        //node.warn(JSON.parse(element.data));\n        let datael = JSON.parse(element.data).user;\n        datael.loterid = JSON.parse(element.data).loterid;\n        if (datael.id) {\n            lt_users.push(datael)\n            rawlist.push(datael.id)\n        }\n        \n        \n    }\n\n});\n//избавляемся от пустых ячеек\nvar filtered = rawlist.filter(function (el) {\n    return el > 1\n});\n\n//избавляемся от неуникальных\nrawlist = unique(rawlist)\n\n\n\n//фильтруем lt_users зная теперь нужные ID\nfor (let index = 0; index < rawlist.length; index++) {\n    const id = rawlist[index];\n    //node.warn(id)\n    ready_users.push(lt_users.find(el => {\n        //node.warn(el)\n        return (el.id == id)\n    }))\n\n}\n\n\n\n\nmsg.payload = ready_users\nglobal.set('playedusers', ready_users);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 1060,
        "wires": [
            [
                "a123774fb3f16ddd"
            ]
        ]
    },
    {
        "id": "bcf8f5d5fc702a1a",
        "type": "function",
        "z": "7f80e3ebbbbbf4fc",
        "name": "выборка idlist",
        "func": "\nfunction unique(arr) {\n    let result = [];\n\n    for (let str of arr) {\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n\n    return result;\n}\n\n\n\nlet raw = msg.payload;\nnode.warn(raw);\nlet rawlist = [];\nlet lt_users = [];\nlet ready_users = []\n\n//делаем нужную выборку\nraw.forEach(function (element, i) {\n    if (element.type == \"lotereya-register\") {\n        //node.warn(JSON.parse(element.data));\n        let datael = JSON.parse(element.data).user;\n        datael.loterid = JSON.parse(element.data).loterid;\n        if (datael.id) {\n            lt_users.push(datael)\n            rawlist.push(datael.id)\n        }\n        \n        \n    }\n\n});\n//избавляемся от пустых ячеек\nvar filtered = rawlist.filter(function (el) {\n    return el > 1\n});\n\n//избавляемся от неуникальных\nrawlist = unique(rawlist)\n\n\n\n//фильтруем lt_users зная теперь нужные ID\nfor (let index = 0; index < rawlist.length; index++) {\n    const id = rawlist[index];\n    //node.warn(id)\n    ready_users.push(lt_users.find(el => {\n        //node.warn(el)\n        return (el.id == id)\n    }))\n\n}\n\n\n\n\nmsg.payload = ready_users\nnode.warn(ready_users)\n//global.set('playedusers', ready_users);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2200,
        "y": 720,
        "wires": [
            [
                "fa962cbebcc1c043"
            ]
        ]
    },
    {
        "id": "41daca13d4b1f9cc",
        "type": "sqlite",
        "z": "7f80e3ebbbbbf4fc",
        "mydb": "59ed4f05562ad1b1",
        "sqlquery": "fixed",
        "sql": "SELECT * FROM allc WHERE t > 1649921754114",
        "name": "select from table1",
        "x": 1970,
        "y": 720,
        "wires": [
            [
                "bcf8f5d5fc702a1a"
            ]
        ]
    },
    {
        "id": "fa962cbebcc1c043",
        "type": "debug",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 760,
        "wires": []
    },
    {
        "id": "6318bcc5824daac4",
        "type": "inject",
        "z": "7f80e3ebbbbbf4fc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1760,
        "y": 720,
        "wires": [
            [
                "41daca13d4b1f9cc"
            ]
        ]
    },
    {
        "id": "51787043d648a80d",
        "type": "inject",
        "z": "d1b37d24449aad51",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 300,
        "wires": [
            [
                "47489b787d9f7178"
            ]
        ]
    },
    {
        "id": "47489b787d9f7178",
        "type": "function",
        "z": "d1b37d24449aad51",
        "name": "",
        "func": "const pokemon = {\n    name: \"pikachu\",\n    age: 6,\n    skill: \"Electric Shock!\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 280,
        "wires": [
            [
                "411027be7bc015ad"
            ]
        ]
    },
    {
        "id": "411027be7bc015ad",
        "type": "debug",
        "z": "d1b37d24449aad51",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "5deaefdc02229b89",
        "type": "sqlite",
        "z": "d90888f2a9b33ff4",
        "mydb": "c89ef81beac2a937",
        "sqlquery": "fixed",
        "sql": "INSERT INTO table1 (c1, c2, c3)\nVALUES( 'hello', 'world', '!');",
        "name": "put into table1",
        "x": 380,
        "y": 120,
        "wires": [
            [
                "138ca9c106b345f4"
            ]
        ]
    },
    {
        "id": "80b8d9a57164418c",
        "type": "inject",
        "z": "d90888f2a9b33ff4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "5deaefdc02229b89"
            ]
        ]
    },
    {
        "id": "138ca9c106b345f4",
        "type": "debug",
        "z": "d90888f2a9b33ff4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "56783ba16ab3da30",
        "type": "sqlite",
        "z": "d90888f2a9b33ff4",
        "mydb": "c89ef81beac2a937",
        "sqlquery": "fixed",
        "sql": "DELETE FROM table1 WHERE a = 3;",
        "name": "select from table1",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "c9e5242157b18dc8"
            ]
        ]
    },
    {
        "id": "9bc913ab3955e756",
        "type": "inject",
        "z": "d90888f2a9b33ff4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "56783ba16ab3da30"
            ]
        ]
    },
    {
        "id": "c9e5242157b18dc8",
        "type": "debug",
        "z": "d90888f2a9b33ff4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 180,
        "wires": []
    }
]